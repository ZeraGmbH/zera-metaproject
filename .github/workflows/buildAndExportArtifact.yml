name: Build
on:
  workflow_dispatch:
  schedule:
    - cron:  '0 3 * * *'
  push:
    branches:
      - master
    paths:
      - '!.github/**'
  workflow_run:
    workflows: ["Update Submodule"]
    branches: [master]
    types: 
      - completed

# This workflow runs build and makes submodules libraries available to link
# against.
#
# What are the trigger events?:
# * Manual
# * Scheduled
# * On finish of workflow 'Update Submodule' which is triggered by submodule's
#   'trigger updates' workflow
#
# Some words on caching:
# * When triggered by 'Update Submodule' sources, build-files and installed
#   files are loaded to increase build times on daily business.
#   To speed up, only install artefacts are generated and saved
# * On other 'workflow_dispatch' (manual start) or 'schedule' no artifacts are
#   downloaded so workflow builds from scratch

jobs:
  build:
    if: |
     !contains(github.event.head_commit.message, 'ci skip') &&
     (github.event.workflow_run.conclusion == 'success' ||
     github.event_name != 'workflow_run' ) 
     
    runs-on: ubuntu-latest

    container:
      image: schnitzeltony/fedora-qt5:32
    steps:
      - name: Echo github environment
        run: |
          echo "Home: $HOME"
          echo "Workspace: $GITHUB_WORKSPACE"
          echo "Commit message: " ${{ github.event.head_commit.message }}
          echo "Conclusion: " ${{ github.event.workflow_run.conclusion }}
          echo "Event name: "${{ github.event_name }}

      # Prepare source code for incremental build
      - name: Download source artifact last build
        if: ${{ github.event_name != 'workflow_dispatch' && github.event_name != 'schedule' }}
        uses: dawidd6/action-download-artifact@v2
        with:
          repo: ZeraGmbH/zera-metaproject
          name: source-artifact
          check_artifacts: true
        continue-on-error: true

      - name: 'Untar source files last build'
        run: |
          mkdir -p "$GITHUB_WORKSPACE"
          if [ -e source_files.tar.xz ]; then
            tar -xf source_files.tar.xz -C /
            rm source_files.tar.xz
          else
            echo 'source_files.tar.xz not found'
          fi

      - name: 'Checkout git'
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Prepare last build files for incremental build
      - name: Download build artifact
        if: ${{ github.event_name != 'workflow_dispatch' && github.event_name != 'schedule' }}
        uses: dawidd6/action-download-artifact@v2
        with:
          repo: ZeraGmbH/zera-metaproject
          name: build-artifact
          check_artifacts: true
        continue-on-error: true

      - name: 'Untar build files'
        run: |
          mkdir -p "$HOME/targetbuild"
          if [ -e build_files.tar.xz ]; then
            tar -xf build_files.tar.xz -C /
            rm build_files.tar.xz
          else
            echo 'build_files.tar.xz not found'
          fi

      # Prepare last install files for incremental build
      - name: Download install artifact
        if: ${{ github.event_name != 'workflow_dispatch' && github.event_name != 'schedule' }}
        uses: dawidd6/action-download-artifact@v2
        with:
          repo: ZeraGmbH/zera-metaproject
          name: install-artifact
          check_artifacts: true
        continue-on-error: true

      - name: 'Untar install files'
        run: |
          if [ -e install_files.tar.xz ]; then
            tar -xf install_files.tar.xz -C /
            rm install_files.tar.xz
          else
            echo 'build_files.tar.xz not found'
          fi

      # Build
      - name: Build
        run: |
          cd "$HOME/targetbuild"
          cmake $GITHUB_WORKSPACE \
           -DCMAKE_BUILD_TYPE="Release" \
           -DCMAKE_PREFIX_PATH="$HOME/install/usr;/usr" \
           -DCMAKE_INSTALL_PREFIX:PATH="$HOME/install/usr" \
           -DCMAKE_INSTALL_SYSCONFDIR="$HOME/install/etc" \
           -DfirstBuild=ON
          # compile / install
           make -i -j $(getconf _NPROCESSORS_ONLN)

      # Keep sources for incremental checkout
      - name: Tar sources
        if: ${{ github.event_name != 'workflow_run' }}
        run: |
          time tar -c -I 'xz -T0' -f $HOME/source_files.tar.xz "$GITHUB_WORKSPACE"

      - name: 'Upload source artifact'
        if: ${{ github.event_name != 'workflow_run' }}
        uses: actions/upload-artifact@v3
        with:
          name: source-artifact
          path: /github/home/source_files.tar.xz
          retention-days: 3

      # Keep build files for incremental build
      - name: 'Tar build files'
        if: ${{ github.event_name != 'workflow_run' }}
        run: |
          time tar -c -I 'xz -T0' -f $HOME/build_files.tar.xz "$HOME/targetbuild"

      - name: 'Upload build artifact'
        if: ${{ github.event_name != 'workflow_run' }}
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: /github/home/build_files.tar.xz
          retention-days: 3

      # Keep install files for incremental build / for submodule actions -> mandatory
      - name: 'Tar install files'
        run: |
          time tar -c -I 'xz -T0' -f $HOME/install_files.tar.xz "$HOME/install"

      - name: 'Upload install artifact'
        uses: actions/upload-artifact@v3
        with:
          name: install-artifact
          path: /github/home/install_files.tar.xz
          retention-days: 3

      # Keep install files for actions of submodules
      - name: Upload install artifact (TODO remove)
        uses: actions/upload-artifact@v3.1.2
        with:
          name: buildroot
          path: /github/home/install/
          retention-days: 3

